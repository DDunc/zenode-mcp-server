{
  "permissions": {
    "allow": [
      "mcp__gemini__review_code",
      "mcp__gemini__chat",
      "mcp__gemini__analyze",
      "Bash(find:*)",
      "mcp__gemini__review_changes",
      "Bash(python test_resolve.py:*)",
      "Bash(python3:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(source:*)",
      "Bash(rm:*)",
      "Bash(docker:*)",
      "Bash(./run-server.sh:*)",
      "mcp__zen__version",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(./setup-claude.sh:*)",
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(redis-cli:*)",
      "Bash(mv:*)",
      "Bash(claude mcp:*)",
      "mcp__zenode-docker__version",
      "mcp__zenode-docker__codereview",
      "Bash(npm start:*)",
      "mcp__zenode-docker__chat",
      "mcp__zenode-docker__thinkdeep",
      "Bash(echo $MCP_WORKSPACE)",
      "mcp__zenode-docker__debug",
      "mcp__zenode-docker__precommit",
      "mcp__zenode-docker__testgen",
      "Bash(npm test)",
      "mcp__zenode-docker__analyze",
      "Bash(npm run type-check:*)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "WebFetch(domain:github.com)",
      "Bash(npm run lint)",
      "Bash(true)",
      "Bash(node:*)",
      "Bash(rg:*)",
      "Bash(./get-logs.sh:*)",
      "Bash(npm install:*)",
      "Bash(ollama:*)",
      "Bash(./scripts/setup-local-ai.sh:*)",
      "Bash(git remote set-url:*)",
      "Bash(git add:*)",
      "mcp__zenode-docker__gopher",
      "Bash(git rebase:*)",
      "Bash(EDITOR='sed -i \"s/update many things/update readme, gopherize all the things/\"' git rebase -i 685dda0^)",
      "Bash(git commit:*)",
      "Bash(git filter-branch:*)",
      "Bash(npx tsc:*)",
      "Bash(npx typescript:*)",
      "mcp__zenode-docker__grunts",
      "Bash(curl:*)",
      "Bash(touch:*)",
      "mcp__ide__executeCode",
      "Bash(OPENROUTER_API_KEY=\"\" docker-compose up -d status-service grunt-worker-1 grunt-worker-2)",
      "Bash(OPENROUTER_API_KEY=\"\" docker-compose up --build -d status-service grunt-worker-1 grunt-worker-2)",
      "Bash(sed:*)",
      "Bash(WORKER_ID=1 MODEL=qwen2.5-coder:14b SPECIALIZATION=\"JavaScript/TypeScript\" TASK_PROMPT=\"Create a tank deathmatch game with WASD controls, arrow keys for player 2, and AI tanks\" REDIS_URL=\"redis://localhost:6380\" PORT=3031 node real-llm-worker.js)",
      "Bash(pkill:*)",
      "Bash(WORKER_ID=2 MODEL=qwen2.5-coder:14b SPECIALIZATION=\"JavaScript/TypeScript\" TASK_PROMPT=\"Create a racing game with 3 different cars, multiple tracks, lap counting, and finish line detection. Include boost power-ups and obstacle avoidance.\" REDIS_URL=\"redis://localhost:6380\" PORT=4000 node real-llm-worker.js)",
      "Bash(npx vite preview:*)",
      "Bash(open:*)",
      "Bash(git checkout:*)",
      "Bash(npm run mcp-client:*)",
      "Bash(npm test:*)",
      "mcp__zenode-docker__bootstrap",
      "Bash(timeout:*)",
      "Bash(./test-bootstrap-simple.sh:*)",
      "Bash(./test-bootstrap-raw.sh:*)",
      "Bash(npx tsx:*)",
      "Bash(npm run demo:vision-auto-select:*)",
      "mcp__zenode-docker__seer",
      "Bash(claude-code mcp:*)",
      "Bash(zenode:seer \"Analyze this image and describe what you see in detail\" --images [\"/workspace/tests/triangle.png\"])",
      "Bash(zenode:seer \"Analyze this face image and describe what you see in detail\" --images '[\"/workspace/workspace/sample-face-1750205477893.jpg\"]')",
      "mcp__ide__getDiagnostics",
      "WebFetch(domain:openrouter.ai)",
      "Bash(ZENODE_CLI_DEBUG=1 node dist/index.js seer '{\"prompt\": \"What do you see in this image?\", \"images\": [\"demo-output/sample-face-1750205477893.jpg\"], \"model\": \"auto\"}')",
      "Bash(base64:*)",
      "Bash(ZENODE_CLI_DEBUG=1 node dist/index.js seer '{\"prompt\": \"Analyze this face image in detail - describe the person, lighting, image quality, and professional suitability\", \"images\": [\"/Users/edunc/Documents/gitz/zen-mcp-server/zenode/demo-output/sample-face-1750205477893.jpg\"], \"model\": \"auto\", \"analysis_type\": \"detailed\"}')",
      "WebFetch(domain:serpapi.com)",
      "WebFetch(domain:www.searchapi.io)",
      "WebFetch(domain:www.browserbase.com)",
      "WebFetch(domain:en.wikipedia.org)",
      "mcp__zenode-docker__visit",
      "WebFetch(domain:www.spriters-resource.com)",
      "WebFetch(domain:archive.org)",
      "Bash(unzip:*)",
      "Bash(env)",
      "WebFetch(domain:www.warp.dev)",
      "Bash(zenode:analyze \"I need to analyze upstream commits to categorize them for porting to zenode. Here are the key commits from upstream since our last merge:\n\n1. Migration from Docker to Standalone Python Server (#73) - 4151c3c\n2. New Planner tool for breaking down complex projects - a509730  \n3. Add Consensus Tool for Multi-Model Perspective Gathering - 95556ba\n4. Vastly improved debug tool - 044a862\n5. Model discovery improvements for auto mode - 5199dd6, dad1e2d\n6. AI banter feature - 5c75ac9\n7. Various documentation improvements\n\nI need to categorize these into:\n1) Features to Port (priority ranked)\n2) Python specific stuff \n3) Config changes we may want\n4) Documentation changes for our claude.md\n\nPlease analyze these commits and help me understand what's most valuable to port to our Node.js zenode implementation.\")",
      "Bash(npm run test:*)",
      "Bash(zenode:version)",
      "Bash(./zenode-auto-repair.sh:*)",
      "Bash(./zenode-status.sh:*)",
      "mcp__zenode-docker__planner",
      "Bash(git fetch:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(:z \"test basic functionality with zenode:chat\")",
      "mcp__zenode-docker__threads",
      "Bash(./scripts/check-secrets.sh:*)",
      "Bash(git check-ignore:*)",
      "mcp__zenode-docker__chat",
      "mcp__zenode-docker__thinkdeep",
      "mcp__zenode-docker__debug",
      "mcp__zenode-docker__analyze",
      "Bash(git clone:*)",
      "Bash(echo \"HOME: $HOME\")",
      "Bash(echo:*)",
      "mcp__zenode-docker__gopher",
      "mcp__zenode-docker__version",
      "Bash(claude:*)",
      "Bash(grep -n \"workspace\" /Users/edunc/Documents/gitz/zen-mcp-server/zenode/dist/utils/file-utils.js)",
      "Bash(diff:*)",
      "Bash(./docker-build.sh:*)",
      "Bash(npm run start:mcp:*)",
      "mcp__zenode-docker__listmodels"
    ],
    "deny": []
  }
}